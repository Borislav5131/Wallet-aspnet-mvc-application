@model Wallet.Core.ViewModels.Asset.CreateAssetFormModel

@{
    ViewData["Title"] = "Create asset";
}

<div class="row">
    <div class="offset-md-2 col-md-6 col-sm-12">
        <h4>Create Asset</h4>

        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Abbreviation" class="control-label"></label>
                <input asp-for="Abbreviation" class="form-control" />
                <span asp-validation-for="Abbreviation" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="CategoryId" class="control-label"></label>
                <select asp-for="CategoryId" class="form-control">
                   <option value="@Model.CategoryId">@Model.CategoryName</option>
                </select>
                <span asp-validation-for="CategoryId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Value" class="control-label"></label>
                <input asp-for="Value" class="form-control" />
                <span asp-validation-for="Value" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>

        </form>
    </div>
</div>

@section Scripts {
    @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
}
